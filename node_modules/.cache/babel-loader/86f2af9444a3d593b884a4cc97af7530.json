{"ast":null,"code":"var _jsxFileName = \"/Users/aaronthole/mycite/src/components/FadeInSection.js\";\nimport React from \"react\";\nexport default function FadeInSection(props) {\n  const [isVisible, setVisible] = React.useState(false);\n  const domRef = React.useRef();\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => setVisible(entry.isIntersecting));\n    });\n    observer.observe(domRef.current);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `fade-in-section ${isVisible ? \"is-visible\" : \"\"}`,\n    style: {\n      transitionDelay: `${props.delay}`\n    },\n    ref: domRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/aaronthole/mycite/src/components/FadeInSection.js"],"names":["React","FadeInSection","props","isVisible","setVisible","useState","domRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","transitionDelay","delay","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAAhC;AACA,QAAMC,MAAM,GAAGN,KAAK,CAACO,MAAN,EAAf;AACAP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpB,UAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBC,OAAO,IAAI;AACnDA,MAAAA,OAAO,CAACC,OAAR,CAAgBC,KAAK,IAAIT,UAAU,CAACS,KAAK,CAACC,cAAP,CAAnC;AACD,KAFgB,CAAjB;AAGAL,IAAAA,QAAQ,CAACM,OAAT,CAAiBT,MAAM,CAACU,OAAxB;AACD,GALD,EAKG,EALH;AAMA,sBACE;AACE,IAAA,SAAS,EAAG,mBAAkBb,SAAS,GAAG,YAAH,GAAkB,EAAG,EAD9D;AAEE,IAAA,KAAK,EAAE;AAAEc,MAAAA,eAAe,EAAG,GAAEf,KAAK,CAACgB,KAAM;AAAlC,KAFT;AAGE,IAAA,GAAG,EAAEZ,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGJ,KAAK,CAACiB,QALT,CADF;AASD","sourcesContent":["import React from \"react\";\n\nexport default function FadeInSection(props) {\n  const [isVisible, setVisible] = React.useState(false);\n  const domRef = React.useRef();\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => setVisible(entry.isIntersecting));\n    });\n    observer.observe(domRef.current);\n  }, []);\n  return (\n    <div\n      className={`fade-in-section ${isVisible ? \"is-visible\" : \"\"}`}\n      style={{ transitionDelay: `${props.delay}` }}\n      ref={domRef}\n    >\n      {props.children}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}