{"ast":null,"code":"// import React from \"react\";\n// export default function FadeInSection(props) {\n//   const [isVisible, setVisible] = React.useState(false);\n//   const domRef = React.useRef();\n//   React.useEffect(() => {\n//     const observer = new IntersectionObserver(entries => {\n//       entries.forEach(entry => setVisible(entry.isIntersecting));\n//     });\n//     observer.observe(domRef.current);\n//   }, []);\n//   return (\n//     <div\n//       className={`fade-in-section ${isVisible ? \"is-visible\" : \"\"}`}\n//       style={{ transitionDelay: `${props.delay}` }}\n//       ref={domRef}\n//     >\n//       {props.children}\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/aaronthole/mycite/src/components/FadeInSection.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from \"react\";\n\n// export default function FadeInSection(props) {\n//   const [isVisible, setVisible] = React.useState(false);\n//   const domRef = React.useRef();\n//   React.useEffect(() => {\n//     const observer = new IntersectionObserver(entries => {\n//       entries.forEach(entry => setVisible(entry.isIntersecting));\n//     });\n//     observer.observe(domRef.current);\n//   }, []);\n//   return (\n//     <div\n//       className={`fade-in-section ${isVisible ? \"is-visible\" : \"\"}`}\n//       style={{ transitionDelay: `${props.delay}` }}\n//       ref={domRef}\n//     >\n//       {props.children}\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}